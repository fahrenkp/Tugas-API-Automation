{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-24T08:06:12.575Z",
    "end": "2023-06-24T08:06:14.654Z",
    "duration": 2079,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6329e8ff-7e43-4a82-975d-e2772189b911",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d62d9f5-a13d-4968-abec-ea8682383382",
          "title": "Post Create User di Web Kasir",
          "fullFile": "C:\\Users\\denma\\Documents\\SANBER GIT\\tugas-apiautomation\\test\\suite\\testsuite.js",
          "file": "\\test\\suite\\testsuite.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create New User - Positive Case 1",
              "fullTitle": "Post Create User di Web Kasir Create New User - Positive Case 1",
              "timedOut": false,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await createUser();\nexpect(response.statusCode).to.eql(201);\nexpect(response.body.data.name).to.eql(\"fahrenkp\");\nconsole.log(await response.body);",
              "err": {},
              "uuid": "be5f666f-a8c5-4cb3-b875-d7f862777c80",
              "parentUUID": "7d62d9f5-a13d-4968-abec-ea8682383382",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create New User - Positive Case 2",
              "fullTitle": "Post Create User di Web Kasir Create New User - Positive Case 2",
              "timedOut": false,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n  .post(\"/users\")\n  .send({\n    name: \"michael\",\n    email: \"michael@yopmail.com\",\n    password: \"password\",\n  })\n  .set({\n    Authorization: AUTH,\n  });\nexpect(response.statusCode).to.eql(201);\nexpect(response.body.data.name).to.eql(\"michael\");\nconsole.log(await response.body);",
              "err": {},
              "uuid": "ec64509b-2562-490e-b6be-474b957ab809",
              "parentUUID": "7d62d9f5-a13d-4968-abec-ea8682383382",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create New User - Negative Case (Invalid Authorization Token)",
              "fullTitle": "Post Create User di Web Kasir Create New User - Negative Case (Invalid Authorization Token)",
              "timedOut": false,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const AUTH = \"InvalidToken\";\nconst response = await request\n  .post(\"/users\")\n  .send({\n    name: \"fahrenkp\",\n    email: \"fahrenkp@yopmail.com\",\n    password: \"password\",\n  })\n  .set({\n    Authorization: AUTH,\n  });\nexpect(response.statusCode).to.eql(401);\nconsole.log(await response.body);",
              "err": {},
              "uuid": "d3cc76c6-66e6-4741-8195-32e061a23ad6",
              "parentUUID": "7d62d9f5-a13d-4968-abec-ea8682383382",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create New User - Negative Case (Missing Name Field)",
              "fullTitle": "Post Create User di Web Kasir Create New User - Negative Case (Missing Name Field)",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n  .post(\"/users\")\n  .send({\n    email: \"john@yopmail.com\",\n    password: \"password\",\n  })\n  .set({\n    Authorization: AUTH,\n  });\nexpect(response.statusCode).to.eql(400);\nconsole.log(await response.body);",
              "err": {},
              "uuid": "fdf1e045-7a70-4717-ab6e-32762569d7bc",
              "parentUUID": "7d62d9f5-a13d-4968-abec-ea8682383382",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be5f666f-a8c5-4cb3-b875-d7f862777c80",
            "ec64509b-2562-490e-b6be-474b957ab809",
            "d3cc76c6-66e6-4741-8195-32e061a23ad6",
            "fdf1e045-7a70-4717-ab6e-32762569d7bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1027,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "342e22a9-2cc6-4e01-ae08-e4f18b39212c",
          "title": "GET list data user ",
          "fullFile": "C:\\Users\\denma\\Documents\\SANBER GIT\\tugas-apiautomation\\test\\suite\\testsuite.js",
          "file": "\\test\\suite\\testsuite.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "return user page 1 - Positive Case",
              "fullTitle": "GET list data user  return user page 1 - Positive Case",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query1 = \"1\";\nconst response = await getUserPages(query1);\nexpect(response.status).to.eql(200);\nconsole.log(JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "f64528d4-340a-4347-8567-858796911ec8",
              "parentUUID": "342e22a9-2cc6-4e01-ae08-e4f18b39212c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns user page 1 with users array - Positive Case",
              "fullTitle": "GET list data user  returns user page 1 with users array - Positive Case",
              "timedOut": false,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query1 = \"1\";\nconst response = await getUserPages(query1);\nexpect(response.body.data.users).to.be.an(\"array\").that.is.not.empty;\nconsole.log(JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "1843bc56-33f3-4adb-aac0-4038951734bf",
              "parentUUID": "342e22a9-2cc6-4e01-ae08-e4f18b39212c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns user page 2 with status code 200 - Negative Case",
              "fullTitle": "GET list data user  returns user page 2 with status code 200 - Negative Case",
              "timedOut": false,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query2 = \"2\";\nconst response = await getUserPages(query2);\nexpect(response.status).to.eql(200);\nconsole.log(JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "0b68af04-86b1-45f2-9f67-12592536cb22",
              "parentUUID": "342e22a9-2cc6-4e01-ae08-e4f18b39212c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns user page 1 with status code 401 when authentication token is invalid - Negative Case",
              "fullTitle": "GET list data user  returns user page 1 with status code 401 when authentication token is invalid - Negative Case",
              "timedOut": false,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query1 = \"1\";\nconst AUTH = \"Bearer InvalidToken\";\nconst response = await request\n  .get(`/users?page=${query1}`)\n  .set({ Authorization: AUTH });\nexpect(response.status).to.eql(401);\nconsole.log(JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "b11013f8-cb95-47bd-81f2-553bfb4f2d22",
              "parentUUID": "342e22a9-2cc6-4e01-ae08-e4f18b39212c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f64528d4-340a-4347-8567-858796911ec8",
            "1843bc56-33f3-4adb-aac0-4038951734bf",
            "0b68af04-86b1-45f2-9f67-12592536cb22",
            "b11013f8-cb95-47bd-81f2-553bfb4f2d22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 391,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4f6f5bb3-ccb8-41ef-85db-0c333ef14230",
          "title": "PUT Update User kasir",
          "fullFile": "C:\\Users\\denma\\Documents\\SANBER GIT\\tugas-apiautomation\\test\\suite\\testsuite.js",
          "file": "\\test\\suite\\testsuite.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update Existing User - Positive Case 1",
              "fullTitle": "PUT Update User kasir Update Existing User - Positive Case 1",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await updateUser();",
              "err": {},
              "uuid": "2d680ddf-3c29-47d8-96ad-17a264e04b6b",
              "parentUUID": "4f6f5bb3-ccb8-41ef-85db-0c333ef14230",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Existing User - Positive Case 2",
              "fullTitle": "PUT Update User kasir Update Existing User - Positive Case 2",
              "timedOut": false,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userId = \"337c9ccb-d04a-474f-ad44-f62b8ccf31db\";\nconst response = await request\n  .put(`/users/${userId}`)\n  .send({\n    name: \"johni\",\n    email: \"john@yopmail.com\",\n  })\n  .set({\n    Authorization: AUTH,\n  });\nexpect(response.statusCode).to.eql(200);\nexpect(response.body.data.name).to.eql(\"johni\");\nconsole.log(response.body);",
              "err": {},
              "uuid": "77c540d8-96cd-4878-acdf-46b029654fb0",
              "parentUUID": "4f6f5bb3-ccb8-41ef-85db-0c333ef14230",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Non-Existing User - Negative Case",
              "fullTitle": "PUT Update User kasir Update Non-Existing User - Negative Case",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nonExistingUserId = \"non-existing-user-id\";\nconst response = await request\n  .put(`/users/${nonExistingUserId}`)\n  .send({\n    name: \"musang\",\n    email: \"fahrenkp@yopmail.com\",\n  })\n  .set({\n    Authorization: AUTH,\n  });\nexpect(response.statusCode).to.eql(404);\nconsole.log(response.body);",
              "err": {},
              "uuid": "7354a43b-c952-41a2-b8b1-5bbd7b070620",
              "parentUUID": "4f6f5bb3-ccb8-41ef-85db-0c333ef14230",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update User with Invalid Authorization Token - Negative Case",
              "fullTitle": "PUT Update User kasir Update User with Invalid Authorization Token - Negative Case",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const invalidAuth = \"InvalidToken\";\nconst userId = \"337c9ccb-d04a-474f-ad44-f62b8ccf31db\";\nconst response = await request\n  .put(`/users/${userId}`)\n  .send({\n    name: \"budi\",\n    email: \"budi@yopmail.com\",\n  })\n  .set({\n    Authorization: invalidAuth,\n  });\nexpect(response.statusCode).to.eql(401);\nconsole.log(response.body);",
              "err": {},
              "uuid": "b502f869-1426-4146-a6ef-100e386c7ff5",
              "parentUUID": "4f6f5bb3-ccb8-41ef-85db-0c333ef14230",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d680ddf-3c29-47d8-96ad-17a264e04b6b",
            "77c540d8-96cd-4878-acdf-46b029654fb0",
            "7354a43b-c952-41a2-b8b1-5bbd7b070620",
            "b502f869-1426-4146-a6ef-100e386c7ff5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 309,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c2f64e3-2817-49dd-9faf-f1eda390ff00",
          "title": "DELETE User di Web Kasir",
          "fullFile": "C:\\Users\\denma\\Documents\\SANBER GIT\\tugas-apiautomation\\test\\suite\\testsuite.js",
          "file": "\\test\\suite\\testsuite.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete User - Positive Case 1",
              "fullTitle": "DELETE User di Web Kasir Delete User - Positive Case 1",
              "timedOut": false,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userId = \"db0cbc25-4ad9-480e-9b2b-151825a9c5c1\"; // Ganti sesuai dengan ID pengguna yang ingin dihapus\nconst response = await deleteUser(userId);\nexpect(response.status).to.eql(200);\nconsole.log(response.body);",
              "err": {},
              "uuid": "e1417107-c97b-443c-9aec-c58b3b8eacda",
              "parentUUID": "1c2f64e3-2817-49dd-9faf-f1eda390ff00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete User - Positive Case 2",
              "fullTitle": "DELETE User di Web Kasir Delete User - Positive Case 2",
              "timedOut": false,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userId = \"233bd00b-2823-47f3-809c-19c23ddd6185\"; // Ganti sesuai dengan ID pengguna yang ingin dihapus\nconst response = await deleteUser(userId);\nexpect(response.status).to.eql(200);\nconsole.log(response.body);",
              "err": {},
              "uuid": "ff6af8e5-b02b-45ab-aacf-26f39d91837e",
              "parentUUID": "1c2f64e3-2817-49dd-9faf-f1eda390ff00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Non-Existing User - Negative Case",
              "fullTitle": "DELETE User di Web Kasir Delete Non-Existing User - Negative Case",
              "timedOut": false,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nonExistingUserId = \"non-existing-user-id\";\nconst response = await deleteUser(nonExistingUserId);\nexpect(response.status).to.eql(404);\nconsole.log(response.body);",
              "err": {},
              "uuid": "fc285b46-c295-43b7-861b-5ef34294f912",
              "parentUUID": "1c2f64e3-2817-49dd-9faf-f1eda390ff00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete User with Invalid Authorization Token - Negative Case",
              "fullTitle": "DELETE User di Web Kasir Delete User with Invalid Authorization Token - Negative Case",
              "timedOut": false,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const invalidAuth = \"InvalidToken\";\nconst userId = \"54368d3d-b1d5-4ea2-84df-7ccc8b8a6d1e\"; // Ganti sesuai dengan ID pengguna yang ingin dihapus\nconst response = await request\n  .delete(`/users/${userId}`)\n  .set({\n    Authorization: invalidAuth,\n  });\nexpect(response.status).to.eql(401);\nconsole.log(response.body);",
              "err": {},
              "uuid": "766182d7-2742-4a5a-b881-888a59372bf1",
              "parentUUID": "1c2f64e3-2817-49dd-9faf-f1eda390ff00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1417107-c97b-443c-9aec-c58b3b8eacda",
            "ff6af8e5-b02b-45ab-aacf-26f39d91837e",
            "fc285b46-c295-43b7-861b-5ef34294f912",
            "766182d7-2742-4a5a-b881-888a59372bf1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 311,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}